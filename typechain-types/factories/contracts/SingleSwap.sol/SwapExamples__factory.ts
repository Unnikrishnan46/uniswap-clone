/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapExamples,
  SwapExamplesInterface,
} from "../../../contracts/SingleSwap.sol/SwapExamples";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610aba380380610aba83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610108565b60008151905061007e816100f1565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100d1565b9050919050565b60006100ca826100ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100fa816100bf565b811461010557600080fd5b50565b60805160601c61098c61012e6000398060cc52806101925280610247525061098c6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063089fe6aa146100465780634ce4dca514610064578063c31c9c0714610094575b600080fd5b61004e6100b2565b60405161005b9190610883565b60405180910390f35b61007e600480360381019061007991906106f2565b6100b8565b60405161008b919061089e565b60405180910390f35b61009c610245565b6040516100a9919061084c565b60405180910390f35b610bb881565b60006100c683333087610269565b6100f1837f000000000000000000000000000000000000000000000000000000000000000086610489565b60006040518061010001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101e99190610867565b602060405180830381600087803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b91906106c9565b9150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106103685780518252602082019150602081019050602083039250610345565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146103ca576040519150601f19603f3d011682016040523d82523d6000602084013e6103cf565b606091505b509150915081801561040f575060008151148061040e57508080602001905160208110156103fc57600080fd5b81019080805190602001909291905050505b5b610481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061056a5780518252602082019150602081019050602083039250610547565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105cc576040519150601f19603f3d011682016040523d82523d6000602084013e6105d1565b606091505b5091509150818015610611575060008151148061061057508080602001905160208110156105fe57600080fd5b81019080805190602001909291905050505b5b610683576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b60008135905061069981610928565b92915050565b6000813590506106ae8161093f565b92915050565b6000815190506106c38161093f565b92915050565b6000602082840312156106db57600080fd5b60006106e9848285016106b4565b91505092915050565b60008060006060848603121561070757600080fd5b60006107158682870161069f565b93505060206107268682870161068a565b92505060406107378682870161068a565b9150509250925092565b61074a816108b9565b82525050565b61075981610904565b82525050565b610100820160008201516107766000850182610741565b5060208201516107896020850182610741565b50604082015161079c6040850182610810565b5060608201516107af6060850182610741565b5060808201516107c2608085018261082e565b5060a08201516107d560a085018261082e565b5060c08201516107e860c085018261082e565b5060e08201516107fb60e0850182610801565b50505050565b61080a816108cb565b82525050565b610819816108eb565b82525050565b610828816108eb565b82525050565b610837816108fa565b82525050565b610846816108fa565b82525050565b60006020820190506108616000830184610750565b92915050565b60006101008201905061087d600083018461075f565b92915050565b6000602082019050610898600083018461081f565b92915050565b60006020820190506108b3600083018461083d565b92915050565b60006108c4826108cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600061090f82610916565b9050919050565b6000610921826108cb565b9050919050565b610931816108b9565b811461093c57600080fd5b50565b610948816108fa565b811461095357600080fd5b5056fea26469706673582212204b3ffcf561238eb444128bbc7fc79ef6a633c3f75abae5acf359f2dee2f27a3464736f6c63430007060033";

type SwapExamplesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapExamplesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapExamples__factory extends ContractFactory {
  constructor(...args: SwapExamplesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _swapRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_swapRouter, overrides || {});
  }
  override deploy(
    _swapRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_swapRouter, overrides || {}) as Promise<
      SwapExamples & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapExamples__factory {
    return super.connect(runner) as SwapExamples__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapExamplesInterface {
    return new Interface(_abi) as SwapExamplesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapExamples {
    return new Contract(address, _abi, runner) as unknown as SwapExamples;
  }
}
