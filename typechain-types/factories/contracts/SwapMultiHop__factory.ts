/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SwapMultiHop,
  SwapMultiHopInterface,
} from "../../contracts/SwapMultiHop";

const _abi = [
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
    ],
    name: "swapExactOutputMultihop",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109cf806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389a302711161005b57806389a30271146100d5578063c31c9c07146100dd578063e0bab4c4146100e5578063edd83557146100ed5761007d565b8063089fe6aa146100825780633b85cf6a146100a05780634aa4a4fc146100c0575b600080fd5b61008a610100565b6040516100979190610980565b60405180910390f35b6100b36100ae36600461083b565b610106565b6040516100979190610990565b6100c86102f1565b6040516100979190610959565b6100c8610309565b6100c8610321565b6100c8610339565b6100b36100fb36600461080b565b610351565b610bb881565b600061012873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc23330856104d4565b61015b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610674565b6040805160a08101909152600090806101ba736b175474e89094c44da98b954eedeac495271d0f606473a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610bb873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260c087016108ef565b60408051601f198184030181529181529082523360208301524282820152606082018790526080909101859052517ff28c049800000000000000000000000000000000000000000000000000000000815290915073e592427a0aece92de3edee1f18e0157c058615649063f28c04989061023890849060040161096d565b602060405180830381600087803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610823565b9150828210156102ea576102c873c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c058615646000610674565b6102ea73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc230338587036104d4565b5092915050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73e592427a0aece92de3edee1f18e0157c0586156481565b736b175474e89094c44da98b954eedeac495271d0f81565b600061037373c02aaa39b223fe8d0a0e5c4f27ead9083c756cc23330856104d4565b6103a673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610674565b6040805160a081019091526000908061040573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2610bb873a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486064736b175474e89094c44da98b954eedeac495271d0f60c087016108ef565b6040516020818303038152906040528152602001336001600160a01b031681526020014281526020018481526020016000815250905073e592427a0aece92de3edee1f18e0157c058615646001600160a01b031663c04b8d59826040518263ffffffff1660e01b815260040161047b919061096d565b602060405180830381600087803b15801561049557600080fd5b505af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610823565b9392505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000178152925182516000948594938a169392918291908083835b602083106105865780518252601f199092019160209182019101610567565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105e8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ed565b606091505b509150915081801561061b57508051158061061b575080806020019051602081101561061857600080fd5b50515b61066c576040805162461bcd60e51b815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001781529251825160009485949389169392918291908083835b6020831061071e5780518252601f1990920191602091820191016106ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610780576040519150601f19603f3d011682016040523d82523d6000602084013e610785565b606091505b50915091508180156107b35750805115806107b357508080602001905160208110156107b057600080fd5b50515b610804576040805162461bcd60e51b815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b60006020828403121561081c578081fd5b5035919050565b600060208284031215610834578081fd5b5051919050565b6000806040838503121561084d578081fd5b50508035926020909101359150565b6001600160a01b03169052565b6000815160a0845280518060a0860152825b8181101561089857602081840181015160c088840101520161087b565b818111156108a9578360c083880101525b50602084015191506108be602086018361085c565b6040848101519086015260608085015190860152608093840151938501939093525050601f01601f19160160c00190565b6bffffffffffffffffffffffff19606096871b811682527fffffff000000000000000000000000000000000000000000000000000000000060e896871b8116601484015294871b811660178301529290941b909216602b840152921b909116602e82015260420190565b6001600160a01b0391909116815260200190565b6000602082526104cd6020830184610869565b62ffffff91909116815260200190565b9081526020019056fea26469706673582212205fbec00f9edaa527af5a38f4f7d26d790af5b41b644de43639b8b2024d7615a164736f6c63430007060033";

type SwapMultiHopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapMultiHopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapMultiHop__factory extends ContractFactory {
  constructor(...args: SwapMultiHopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapMultiHop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapMultiHop__factory {
    return super.connect(runner) as SwapMultiHop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapMultiHopInterface {
    return new Interface(_abi) as SwapMultiHopInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapMultiHop {
    return new Contract(address, _abi, runner) as unknown as SwapMultiHop;
  }
}
